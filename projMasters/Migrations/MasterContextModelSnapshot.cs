// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projMasters.Database;

#nullable disable

namespace projMasters.Migrations
{
    [DbContext(typeof(MasterContext))]
    partial class MasterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Common.Database.tbl_app_setting", b =>
                {
                    b.Property<long>("pkid_setting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("pkid_setting"), 1L, 1);

                    b.Property<string>("AppSettingKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("AppSettingValue")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("pkid_setting");

                    b.ToTable("tbl_app_setting");
                });

            modelBuilder.Entity("Common.Database.tblBankMaster", b =>
                {
                    b.Property<long>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BankId"), 1L, 1);

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("BankId");

                    b.ToTable("tblBankMaster");
                });

            modelBuilder.Entity("Common.Database.tblCodeGenrationDetails", b =>
                {
                    b.Property<long>("Sno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Sno"), 1L, 1);

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Counter")
                        .HasColumnType("bigint");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("LocationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long>("MonthYear")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Year")
                        .HasColumnType("bigint");

                    b.Property<long>("YearWeek")
                        .HasColumnType("bigint");

                    b.Property<string>("ZoneCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sno");

                    b.HasIndex("Id");

                    b.ToTable("tblCodeGenrationDetails");
                });

            modelBuilder.Entity("Common.Database.tblCodeGenrationMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("CodeGenrationType")
                        .HasColumnType("int");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<byte>("DigitFormate")
                        .HasColumnType("tinyint");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IncludeCompanyCode")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeCountryCode")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeLocationCode")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeMonthYear")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeStateCode")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeYear")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeYearWeek")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludeZoneCode")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long>("OrgId")
                        .HasColumnType("bigint");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblCodeGenrationMaster");

                    b.HasDiscriminator<string>("Discriminator").HasValue("tblCodeGenrationMaster");
                });

            modelBuilder.Entity("Common.Database.tblCompanyMaster", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CompanyId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("OrgId")
                        .HasColumnType("bigint");

                    b.HasKey("CompanyId");

                    b.HasIndex("OrgId");

                    b.ToTable("tblCompanyMaster");
                });

            modelBuilder.Entity("Common.Database.tblCompanyMaster_Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("ApprovalBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ApprovalDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte>("ApprovalStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<byte>("EntityType")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("OrgId")
                        .HasColumnType("bigint");

                    b.Property<long>("RequestedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RequestedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OrgId");

                    b.ToTable("tblCompanyMaster_Log");
                });

            modelBuilder.Entity("Common.Database.tblCountry", b =>
                {
                    b.Property<long>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CountryId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ContactPrefix")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CountryId");

                    b.ToTable("tblCountry");
                });

            modelBuilder.Entity("Common.Database.tblCurrency", b =>
                {
                    b.Property<long>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CurrencyId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("CurrencyId");

                    b.ToTable("tblCurrency");
                });

            modelBuilder.Entity("Common.Database.tblFileMaster", b =>
                {
                    b.Property<string>("FileId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("FileId");

                    b.ToTable("tblFileMaster");
                });

            modelBuilder.Entity("Common.Database.tblLocationMaster", b =>
                {
                    b.Property<long>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LocationId"), 1L, 1);

                    b.Property<string>("AlternateContactNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("AlternateEmail")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<int>("LocationType")
                        .HasColumnType("int");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("OfficeAddress")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("OrgId")
                        .HasColumnType("bigint");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("LocationId");

                    b.HasIndex("OrgId");

                    b.HasIndex("ZoneId");

                    b.ToTable("tblLocationMaster");
                });

            modelBuilder.Entity("Common.Database.tblLocationMaster_Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AlternateContactNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("AlternateEmail")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("ApprovalBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ApprovalDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte>("ApprovalStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<byte>("EntityType")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<int>("LocationType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("OfficeAddress")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("OrgId")
                        .HasColumnType("bigint");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<long>("RequestedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RequestedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("OrgId");

                    b.HasIndex("ZoneId");

                    b.ToTable("tblLocationMaster_Log");
                });

            modelBuilder.Entity("Common.Database.tblOrganisation", b =>
                {
                    b.Property<long>("OrgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrgId"), 1L, 1);

                    b.Property<string>("AlternateContactNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("AlternateEmail")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("OfficeAddress")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("OrgId");

                    b.ToTable("tblOrganisation");
                });

            modelBuilder.Entity("Common.Database.tblOrganisation_Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AlternateContactNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("AlternateEmail")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("ApprovalBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ApprovalDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte>("ApprovalStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<byte>("EntityType")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("OfficeAddress")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("OrgId")
                        .HasColumnType("bigint");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<long>("RequestedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RequestedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrgId");

                    b.ToTable("tblOrganisation_Log");
                });

            modelBuilder.Entity("Common.Database.tblRoleClaim", b =>
                {
                    b.Property<long>("RoleClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RoleClaimId"), 1L, 1);

                    b.Property<int>("AdditionalClaim")
                        .HasColumnType("int");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentMaster")
                        .HasColumnType("int");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("RoleClaimId");

                    b.HasIndex("RoleId");

                    b.ToTable("tblRoleClaim");
                });

            modelBuilder.Entity("Common.Database.tblRoleMaster", b =>
                {
                    b.Property<long>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RoleId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("RoleId");

                    b.ToTable("tblRoleMaster");
                });

            modelBuilder.Entity("Common.Database.tblState", b =>
                {
                    b.Property<long>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StateId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("tblState");
                });

            modelBuilder.Entity("Common.Database.tblUserAllClaim", b =>
                {
                    b.Property<long>("RoleClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RoleClaimId"), 1L, 1);

                    b.Property<int>("AdditionalClaim")
                        .HasColumnType("int");

                    b.Property<int>("DocumentMaster")
                        .HasColumnType("int");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<decimal?>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("RoleClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserAllClaim");
                });

            modelBuilder.Entity("Common.Database.tblUserAllLocationPermission", b =>
                {
                    b.Property<decimal>("Sno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Sno"), 1L, 1);

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Sno");

                    b.HasIndex("LocationId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserAllLocationPermission");
                });

            modelBuilder.Entity("Common.Database.tblUserClaim", b =>
                {
                    b.Property<long>("RoleClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RoleClaimId"), 1L, 1);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentMaster")
                        .HasColumnType("int");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal?>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("RoleClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserClaim");
                });

            modelBuilder.Entity("Common.Database.tblUserCompanyPermission", b =>
                {
                    b.Property<decimal>("Sno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Sno"), 1L, 1);

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<bool>("HaveAllZoneAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal?>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Sno");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserCompanyPermission");
                });

            modelBuilder.Entity("Common.Database.tblUserLocationPermission", b =>
                {
                    b.Property<decimal>("Sno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Sno"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal?>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Sno");

                    b.HasIndex("LocationId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserLocationPermission");
                });

            modelBuilder.Entity("Common.Database.tblUserLoginLog", b =>
                {
                    b.Property<decimal>("Sno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Sno"), 1L, 1);

                    b.Property<string>("DeviceDetails")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FromLocation")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("LoginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LoginStatus")
                        .HasMaxLength(128)
                        .HasColumnType("bit");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal?>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Sno");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserLoginLog");
                });

            modelBuilder.Entity("Common.Database.tblUserOrganisationPermission", b =>
                {
                    b.Property<decimal>("Sno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Sno"), 1L, 1);

                    b.Property<bool>("HaveAllCompanyAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long?>("OrgId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Sno");

                    b.HasIndex("OrgId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserOrganisationPermission");
                });

            modelBuilder.Entity("Common.Database.tblUserOTP", b =>
                {
                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DescId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectiveFromDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveToDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OTP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("SecurityStamp");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserOTP");
                });

            modelBuilder.Entity("Common.Database.tblUserRole", b =>
                {
                    b.Property<long>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserRoleId"), 1L, 1);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserRole");
                });

            modelBuilder.Entity("Common.Database.tblUsersMaster", b =>
                {
                    b.Property<decimal>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte>("LoginFailCount")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("LoginFailCountdt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long?>("OrgId")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("RequiredChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<byte>("is_logged_blocked")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("logged_blocked_Enddt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("logged_blocked_dt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex("OrgId");

                    b.ToTable("tblUsersMaster");
                });

            modelBuilder.Entity("Common.Database.tblUserZonePermission", b =>
                {
                    b.Property<decimal>("Sno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Sno"), 1L, 1);

                    b.Property<bool>("HaveAllLocationAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal?>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("ZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("Sno");

                    b.HasIndex("UserId");

                    b.HasIndex("ZoneId");

                    b.ToTable("tblUserZonePermission");
                });

            modelBuilder.Entity("Common.Database.tblZoneMaster", b =>
                {
                    b.Property<long>("ZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ZoneId"), 1L, 1);

                    b.Property<string>("AlternateContactNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("AlternateEmail")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("OfficeAddress")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("OrgId")
                        .HasColumnType("bigint");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("ZoneId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OrgId");

                    b.ToTable("tblZoneMaster");
                });

            modelBuilder.Entity("Common.Database.tblZoneMaster_Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AlternateContactNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("AlternateEmail")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("ApprovalBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ApprovalDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte>("ApprovalStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<byte>("EntityType")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("OfficeAddress")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<long?>("OrgId")
                        .HasColumnType("bigint");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<long>("RequestedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RequestedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OrgId");

                    b.HasIndex("ZoneId");

                    b.ToTable("tblZoneMaster_Log");
                });

            modelBuilder.Entity("Common.Database.tblCodeGenrationMaster_log", b =>
                {
                    b.HasBaseType("Common.Database.tblCodeGenrationMaster");

                    b.Property<long?>("ApprovalBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ApprovalDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte>("ApprovalStatus")
                        .HasColumnType("tinyint");

                    b.Property<long?>("CodeGenrationMasterId")
                        .HasColumnType("bigint");

                    b.Property<byte>("EntityType")
                        .HasColumnType("tinyint");

                    b.Property<long>("RequestedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RequestedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestedRemarks")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasIndex("CodeGenrationMasterId");

                    b.HasDiscriminator().HasValue("tblCodeGenrationMaster_log");
                });

            modelBuilder.Entity("Common.Database.tblCodeGenrationDetails", b =>
                {
                    b.HasOne("Common.Database.tblCodeGenrationMaster", "tblCodeGenrationMaster")
                        .WithMany()
                        .HasForeignKey("Id");

                    b.Navigation("tblCodeGenrationMaster");
                });

            modelBuilder.Entity("Common.Database.tblCompanyMaster", b =>
                {
                    b.HasOne("Common.Database.tblOrganisation", "tblOrganisation")
                        .WithMany()
                        .HasForeignKey("OrgId");

                    b.Navigation("tblOrganisation");
                });

            modelBuilder.Entity("Common.Database.tblCompanyMaster_Log", b =>
                {
                    b.HasOne("Common.Database.tblCompanyMaster", "tblCompanyMaster")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Common.Database.tblOrganisation", "tblOrganisation")
                        .WithMany()
                        .HasForeignKey("OrgId");

                    b.Navigation("tblCompanyMaster");

                    b.Navigation("tblOrganisation");
                });

            modelBuilder.Entity("Common.Database.tblLocationMaster", b =>
                {
                    b.HasOne("Common.Database.tblOrganisation", "tblOrganisation")
                        .WithMany()
                        .HasForeignKey("OrgId");

                    b.HasOne("Common.Database.tblZoneMaster", "tblZoneMaster")
                        .WithMany()
                        .HasForeignKey("ZoneId");

                    b.Navigation("tblOrganisation");

                    b.Navigation("tblZoneMaster");
                });

            modelBuilder.Entity("Common.Database.tblLocationMaster_Log", b =>
                {
                    b.HasOne("Common.Database.tblLocationMaster", "tblLocationMaster")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Common.Database.tblOrganisation", "tblOrganisation")
                        .WithMany()
                        .HasForeignKey("OrgId");

                    b.HasOne("Common.Database.tblZoneMaster", "tblZoneMaster")
                        .WithMany()
                        .HasForeignKey("ZoneId");

                    b.Navigation("tblLocationMaster");

                    b.Navigation("tblOrganisation");

                    b.Navigation("tblZoneMaster");
                });

            modelBuilder.Entity("Common.Database.tblOrganisation_Log", b =>
                {
                    b.HasOne("Common.Database.tblOrganisation", "tblOrganisation")
                        .WithMany()
                        .HasForeignKey("OrgId");

                    b.Navigation("tblOrganisation");
                });

            modelBuilder.Entity("Common.Database.tblRoleClaim", b =>
                {
                    b.HasOne("Common.Database.tblRoleMaster", "tblRoleMaster")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("tblRoleMaster");
                });

            modelBuilder.Entity("Common.Database.tblState", b =>
                {
                    b.HasOne("Common.Database.tblCountry", "tblCountry")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("tblCountry");
                });

            modelBuilder.Entity("Common.Database.tblUserAllClaim", b =>
                {
                    b.HasOne("Common.Database.tblUsersMaster", "tblUsersMaster")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("tblUsersMaster");
                });

            modelBuilder.Entity("Common.Database.tblUserAllLocationPermission", b =>
                {
                    b.HasOne("Common.Database.tblLocationMaster", "tblLocationMaster")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Common.Database.tblUsersMaster", "tblUsersMaster")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("tblLocationMaster");

                    b.Navigation("tblUsersMaster");
                });

            modelBuilder.Entity("Common.Database.tblUserClaim", b =>
                {
                    b.HasOne("Common.Database.tblUsersMaster", "tblUsersMaster")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("tblUsersMaster");
                });

            modelBuilder.Entity("Common.Database.tblUserCompanyPermission", b =>
                {
                    b.HasOne("Common.Database.tblCompanyMaster", "tblCompanyMaster")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Common.Database.tblUsersMaster", "tblUsersMaster")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("tblCompanyMaster");

                    b.Navigation("tblUsersMaster");
                });

            modelBuilder.Entity("Common.Database.tblUserLocationPermission", b =>
                {
                    b.HasOne("Common.Database.tblLocationMaster", "tblLocationMaster")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Common.Database.tblUsersMaster", "tblUsersMaster")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("tblLocationMaster");

                    b.Navigation("tblUsersMaster");
                });

            modelBuilder.Entity("Common.Database.tblUserLoginLog", b =>
                {
                    b.HasOne("Common.Database.tblUsersMaster", "tblUsersMaster")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("tblUsersMaster");
                });

            modelBuilder.Entity("Common.Database.tblUserOrganisationPermission", b =>
                {
                    b.HasOne("Common.Database.tblOrganisation", "tblOrganisation")
                        .WithMany()
                        .HasForeignKey("OrgId");

                    b.HasOne("Common.Database.tblUsersMaster", "tblUsersMaster")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("tblOrganisation");

                    b.Navigation("tblUsersMaster");
                });

            modelBuilder.Entity("Common.Database.tblUserRole", b =>
                {
                    b.HasOne("Common.Database.tblRoleMaster", "tblRoleMaster")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Common.Database.tblUsersMaster", "tblUsersMaster")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("tblRoleMaster");

                    b.Navigation("tblUsersMaster");
                });

            modelBuilder.Entity("Common.Database.tblUsersMaster", b =>
                {
                    b.HasOne("Common.Database.tblOrganisation", "tblOrganisation")
                        .WithMany()
                        .HasForeignKey("OrgId");

                    b.Navigation("tblOrganisation");
                });

            modelBuilder.Entity("Common.Database.tblUserZonePermission", b =>
                {
                    b.HasOne("Common.Database.tblUsersMaster", "tblUsersMaster")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Common.Database.tblZoneMaster", "tblZoneMaster")
                        .WithMany()
                        .HasForeignKey("ZoneId");

                    b.Navigation("tblUsersMaster");

                    b.Navigation("tblZoneMaster");
                });

            modelBuilder.Entity("Common.Database.tblZoneMaster", b =>
                {
                    b.HasOne("Common.Database.tblCompanyMaster", "tblCompanyMaster")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Common.Database.tblOrganisation", "tblOrganisation")
                        .WithMany()
                        .HasForeignKey("OrgId");

                    b.Navigation("tblCompanyMaster");

                    b.Navigation("tblOrganisation");
                });

            modelBuilder.Entity("Common.Database.tblZoneMaster_Log", b =>
                {
                    b.HasOne("Common.Database.tblCompanyMaster", "tblCompanyMaster")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Common.Database.tblOrganisation", "tblOrganisation")
                        .WithMany()
                        .HasForeignKey("OrgId");

                    b.HasOne("Common.Database.tblZoneMaster", "tblZoneMaster")
                        .WithMany()
                        .HasForeignKey("ZoneId");

                    b.Navigation("tblCompanyMaster");

                    b.Navigation("tblOrganisation");

                    b.Navigation("tblZoneMaster");
                });

            modelBuilder.Entity("Common.Database.tblCodeGenrationMaster_log", b =>
                {
                    b.HasOne("Common.Database.tblCodeGenrationMaster", "tblCodeGenrationMaster")
                        .WithMany()
                        .HasForeignKey("CodeGenrationMasterId");

                    b.Navigation("tblCodeGenrationMaster");
                });
#pragma warning restore 612, 618
        }
    }
}
